{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["gap","gridRef","useRef","useState","width","height","useEffect","setupResizeObserver","resizeObserver","useLayoutEffect","setColumns","size","numOfItems","maxAspectRatio","columns","i","Math","itemAspectRatio","getColumns","children","ResizeObserver","entries","setSize","ref","style","display","gridTemplateColumns","gridGap","App","items","setItems","onClick","newItems","pop","map","item","className","key","ReactDOM","render","document","getElementById"],"mappings":"8PAee,SAAc,GAAmC,IAI9D,EAJ2B,EAAmC,EAAnC,WAAmC,EAAnC,eAA4BA,EAAO,EAAPA,IACjDC,EAAUC,mBAD8C,EAEtCC,mBAAS,CAAEC,MAAF,EAAYC,OAAQ,IAFS,mBAExD,EAFwD,KAExD,EAFwD,OAGhCF,mBAA9B,GAH8D,mBAGxD,EAHwD,KAGxD,EAHwD,KAM9DG,qBAAU,WAER,OADAC,IACO,kBAAMC,EAAb,gBAFFF,IAKAG,2BAAgB,WACdC,EAzBe,SAACC,EAAMC,EAAYC,GAGpC,IAHuD,IACjD,EAAN,EAAM,MAASR,EAAf,EAAeA,OACXS,EAAJ,EACSC,EAAT,EAAgBA,EAAhB,EAAgCA,IAAK,CAInC,GADwBX,KADLC,EADNW,UAAUJ,EAAvB,IAGIK,GAAoCH,IAAxC,EAAgE,MAChEA,IAEF,SAeaI,CAAWP,EAAMQ,EAAP,OAArBT,MACC,CAACC,EAAMQ,EAFVV,SAIA,IAAMF,EAAsB,YAC1BC,EAAiB,IAAIY,gBAAgBC,YAAY,MACrBA,KAA1B,YAAM,EADyC,EACzC,MAAShB,EADgC,EAChCA,OACfiB,EAAQ,SAASjB,eAEnBG,QAAuBP,EAAvBO,UAGF,OACE,yBACEe,IADF,EAEEC,MAAO,CACLC,QADK,OAELpB,OAFK,OAGLqB,oBAAqB,UAAF,OAHd,EAGc,qBACnBC,QAAS,GAAF,OAAK3B,KAPlB,I,MCAa4B,MAlCf,WAAgB,IAAD,EACazB,mBAAS,IADtB,mBACN0B,EADM,KACCC,EADD,KAab,OACE,oCACE,8BACE,gCACE,qEACA,iFACA,4BAAQC,QAhBA,WACdD,EAAS,GAAD,mBAAKD,GAAL,CAAY,QAed,YACA,4BAAQE,QAbG,WACjB,IAAMC,EAAQ,YAAOH,GACrBG,EAASC,MACTH,EAASE,KAUH,gBAEF,iCACE,kBAAC,EAAD,CAAMnB,eAAe,MAAMb,IAAI,QAC5B6B,EAAMK,KAAI,SAACC,EAAMpB,GAAP,OACT,yBAAKqB,UAAU,YAAYC,IAAKtB,YCvB9CuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.fbb45b31.chunk.js","sourcesContent":["import React, { useState, useEffect, useLayoutEffect, useRef } from 'react'\n\nconst getColumns = (size, numOfItems, maxAspectRatio) => {\n  const { width, height } = size\n  let columns = 1\n  for (let i = 0; i < numOfItems; i++) {\n    const rows = Math.ceil(numOfItems / columns)\n    const itemHeight = height / rows\n    const itemAspectRatio = width / columns / itemHeight\n    if (itemAspectRatio < maxAspectRatio || columns === numOfItems) break\n    columns++\n  }\n  return columns\n}\n\nexport default function Grid({ children, maxAspectRatio, gap }) {\n  const gridRef = useRef()\n  const [size, setSize] = useState({ width: 0, height: 0 })\n  const [columns, setColumns] = useState(1)\n  let resizeObserver\n\n  useEffect(() => {\n    setupResizeObserver()\n    return () => resizeObserver.disconnect()\n  }, [])\n\n  useLayoutEffect(() => {\n    setColumns(getColumns(size, children.length, maxAspectRatio))\n  }, [size, children.length])\n\n  const setupResizeObserver = () => {\n    resizeObserver = new ResizeObserver((entries) => {\n      const { width, height } = entries[0].contentRect\n      setSize({ width, height })\n    })\n    resizeObserver.observe(gridRef.current)\n  }\n\n  return (\n    <div\n      ref={gridRef}\n      style={{\n        display: 'grid',\n        height: '100%',\n        gridTemplateColumns: `repeat(${columns}, minmax(0, 1fr))`,\n        gridGap: `${gap}`\n      }}\n    >\n      {children}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport Grid from 'react-fluid-aspect-ratio-grid'\nimport 'react-fluid-aspect-ratio-grid/dist/index.css'\n\nfunction App() {\n  const [items, setItems] = useState([])\n\n  const addItem = () => {\n    setItems([...items, {}])\n  }\n\n  const removeItem = () => {\n    const newItems = [...items]\n    newItems.pop()\n    setItems(newItems)\n  }\n\n  return (\n    <>\n      <main>\n        <header>\n          <h1>react-fluid-aspect-ratio-grid example</h1>\n          <p>Try adding/removing items and resizing the window.</p>\n          <button onClick={addItem}>Add item</button>\n          <button onClick={removeItem}>Remove item</button>\n        </header>\n        <section>\n          <Grid maxAspectRatio='2.2' gap='1rem'>\n            {items.map((item, i) => (\n              <div className='grid-item' key={i}></div>\n            ))}\n          </Grid>\n        </section>\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}