{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["Grid","children","maxAspectRatio","gap","gridRef","useRef","useState","width","height","size","setSize","columns","setColumns","useEffect","setupResizeObserver","resizeObserver","useLayoutEffect","numOfItems","i","Math","itemAspectRatio","getColumns","ResizeObserver","entries","ref","style","display","gridTemplateColumns","gridGap","sizmaxAspectRatioe","PropTypes","string","App","items","setItems","href","target","onClick","newItems","pop","map","item","className","key","ReactDOM","render","document","getElementById"],"mappings":"wQAgBe,SAASA,EAAK,GAAmC,IAI9D,EAJ6BC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,eAAgBC,EAAO,EAAPA,IACjDC,EAAUC,mBAD8C,EAEtCC,mBAAS,CAAEC,MAAF,EAAYC,OAAQ,IAA9CC,EAFuD,KAEjDC,EAFiD,OAGhCJ,mBAHgC,GAGvDK,EAHuD,KAG9CC,EAH8C,KAM9DC,qBAAU,WAER,OADAC,IACO,kBAAMC,EAAN,gBAFTF,IAKAG,2BAAgB,WACdJ,EAzBe,SAACH,EAAMQ,EAAYf,GAGpC,IAHuD,IAC/CK,EAAkBE,EAD6B,MACxCD,EAAWC,EAD6B,OAEnDE,EAAJ,EACSO,EAAT,EAAgBA,EAAhB,EAAgCA,IAAK,CAInC,GADwBX,KADLC,EADNW,UAAUF,EAAvB,IAGIG,GAAoCT,IAAxC,EAAgE,MAChEA,IAEF,SAeaU,CAAWZ,EAAMR,EAAP,OAArBW,MACC,CAACH,EAAMR,EAFVe,SAIA,IAAMF,EAAsB,YAC1BC,EAAiB,IAAIO,gBAAe,YAAa,MACrBC,KADqB,YACvChB,EADuC,QAChCC,EADgC,SAE/CE,EAAQ,CAAEH,MAAF,EAASC,eAEnBO,QAAuBX,EAAvBW,UAGF,OACE,yBACES,IADF,EAEEC,MAAO,CACLC,QADK,OAELlB,OAFK,OAGLmB,oBAAqB,UAAF,EAHd,oBAILC,QAAS,GAAGzB,IAPlB,GAeFH,YAAiB,CACf6B,mBAAoBC,IADL,OAEf3B,IAAK2B,IAAUC,Q,cCFFC,MAlDf,WAAgB,IAAD,EACa1B,mBAAS,IADtB,mBACN2B,EADM,KACCC,EADD,KAab,OACE,oCACE,8BACE,gCACE,qEACA,2BACE,uBACEC,KAAK,kEACLC,OAAO,UAFT,gBAOF,2BACE,uBACED,KAAK,8DACLC,OAAO,UAFT,gBAOF,sEACA,4BAAQC,QAhCA,WACdH,EAAS,GAAD,mBAAKD,GAAL,CAAY,QA+Bd,YACA,4BAAQI,QA7BG,WACjB,IAAMC,EAAQ,YAAOL,GACrBK,EAASC,MACTL,EAASI,KA0BH,gBAEF,iCACE,kBAAC,EAAD,CAAMpC,eAAgB,IAAKC,IAAI,QAC5B8B,EAAMO,KAAI,SAACC,EAAMvB,GAAP,OACT,yBAAKwB,UAAU,YAAYC,IAAKzB,YCvC9C0B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.b1456e2c.chunk.js","sourcesContent":["import React, { useState, useEffect, useLayoutEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\n\nconst getColumns = (size, numOfItems, maxAspectRatio) => {\n  const { width, height } = size\n  let columns = 1\n  for (let i = 0; i < numOfItems; i++) {\n    const rows = Math.ceil(numOfItems / columns)\n    const itemHeight = height / rows\n    const itemAspectRatio = width / columns / itemHeight\n    if (itemAspectRatio < maxAspectRatio || columns === numOfItems) break\n    columns++\n  }\n  return columns\n}\n\nexport default function Grid({ children, maxAspectRatio, gap }) {\n  const gridRef = useRef()\n  const [size, setSize] = useState({ width: 0, height: 0 })\n  const [columns, setColumns] = useState(1)\n  let resizeObserver\n\n  useEffect(() => {\n    setupResizeObserver()\n    return () => resizeObserver.disconnect()\n  }, [])\n\n  useLayoutEffect(() => {\n    setColumns(getColumns(size, children.length, maxAspectRatio))\n  }, [size, children.length])\n\n  const setupResizeObserver = () => {\n    resizeObserver = new ResizeObserver((entries) => {\n      const { width, height } = entries[0].contentRect\n      setSize({ width, height })\n    })\n    resizeObserver.observe(gridRef.current)\n  }\n\n  return (\n    <div\n      ref={gridRef}\n      style={{\n        display: 'grid',\n        height: '100%',\n        gridTemplateColumns: `repeat(${columns}, minmax(0, 1fr))`,\n        gridGap: `${gap}`\n      }}\n    >\n      {children}\n    </div>\n  )\n}\n\nGrid.propTypes = {\n  sizmaxAspectRatioe: PropTypes.number,\n  gap: PropTypes.string\n}\n","import React, { useState } from 'react'\nimport Grid from 'react-fluid-aspect-ratio-grid'\nimport 'react-fluid-aspect-ratio-grid/dist/index.css'\n\nfunction App() {\n  const [items, setItems] = useState([])\n\n  const addItem = () => {\n    setItems([...items, {}])\n  }\n\n  const removeItem = () => {\n    const newItems = [...items]\n    newItems.pop()\n    setItems(newItems)\n  }\n\n  return (\n    <>\n      <main>\n        <header>\n          <h1>react-fluid-aspect-ratio-grid example</h1>\n          <p>\n            <a\n              href='https://github.com/DavideDeFeudis/react-fluid-aspect-ratio-grid'\n              target='_blank'\n            >\n              GitHub repo\n            </a>\n          </p>\n          <p>\n            <a\n              href='https://www.npmjs.com/package/react-fluid-aspect-ratio-grid'\n              target='_blank'\n            >\n              Npm package\n            </a>\n          </p>\n          <p>Add/remove items and resize the window.</p>\n          <button onClick={addItem}>Add item</button>\n          <button onClick={removeItem}>Remove item</button>\n        </header>\n        <section>\n          <Grid maxAspectRatio={2.2} gap='1rem'>\n            {items.map((item, i) => (\n              <div className='grid-item' key={i}></div>\n            ))}\n          </Grid>\n        </section>\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}